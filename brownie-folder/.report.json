{"created": 1651689396.6997776, "duration": 8.482543706893921, "exitcode": 1, "root": "C:\\Users\\mgust\\OneDrive\\Documents\\Quadrabyte\\local-web3-audit\\brownie-folder", "environment": {"Python": "3.9.12", "Platform": "Windows-10-10.0.19044-SP0", "Packages": {"pytest": "6.2.5", "py": "1.11.0", "pluggy": "1.0.0"}, "Plugins": {"eth-brownie": "1.18.1", "hypothesis": "6.27.3", "forked": "1.4.0", "json-report": "1.5.0", "metadata": "2.0.1", "xdist": "1.34.0", "web3": "5.27.0"}}, "summary": {"failed": 1, "total": 1, "collected": 1}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_environment.py", "type": "Module"}, {"nodeid": "tests/test_swc_101.py", "type": "Module"}, {"nodeid": "tests/test_swc_108.py", "type": "Module"}]}, {"nodeid": "tests/test_environment.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_swc_101.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_swc_108.py", "outcome": "passed", "result": [{"nodeid": "tests/test_swc_108.py::test_SWC_108_1", "type": "Function", "lineno": 6}]}], "tests": [{"nodeid": "tests/test_swc_108.py::test_SWC_108_1", "lineno": 6, "outcome": "failed", "keywords": ["tests/test_swc_108.py", "test_SWC_108_1", "brownie-folder"], "setup": {"duration": 0.0007296999999990561, "outcome": "passed"}, "metadata": {"error_message": "Missing state variable visibility"}, "call": {"duration": 0.00143849999999901, "outcome": "failed", "crash": {"path": "C:\\Users\\mgust\\OneDrive\\Documents\\Quadrabyte\\local-web3-audit\\brownie-folder\\tests\\test_swc_108.py", "lineno": 45, "message": "assert False\n +  where False = any(<generator object test_SWC_108_1.<locals>.<genexpr> at 0x0000021AE543A580>)"}, "traceback": [{"path": "tests\\test_swc_108.py", "lineno": 45, "message": "AssertionError"}], "stdout": "*************\nOpen Brackets: 0\n*************\nOpen Brackets: 0\n*************\nOpen Brackets: 0\n['contract', 'SimpleStorage', '{']\n*************\nOpen Brackets: 1\n['uint256', 'public', 'favoriteNumber;']\nif ele:\n*************\nOpen Brackets: 1\n['mapping(uint', '=>', 'uint)', 'internal', 'someMapping;']\nif ele:\n*************\nOpen Brackets: 1\n['string', 'someString']\nif ele:\n", "longrepr": "json_metadata = {'error_message': 'Missing state variable visibility'}\n\n    def test_SWC_108_1(json_metadata):\n        json_metadata[\"error_message\"] = \"Missing state variable visibility\"\n    \n        CONTRACT_NAME = os.listdir(\"./contracts\")[0]\n        in_contract = False\n        open_brackets = 0\n    \n        # iterate through lines in contract\n        with open(f\"contracts/{CONTRACT_NAME}\", \"r\") as f:\n            lines = remove_whitespace(f)\n    \n            # split line into word tokens\n            for line in lines:\n                words = line.split()\n                print(\"*************\")\n    \n                if words[0] == \"contract\":\n                    in_contract = True\n    \n                print(f\"Open Brackets: {open_brackets}\")\n                # determine if inside a function\n                if in_contract:\n                    print(words)\n                    if \"{\" in words[-1]:\n                        open_brackets += 1\n                    if \"}\" in words[-1]:\n                        open_brackets -= 1\n    \n                    # finish test when out of contract\n                    if open_brackets == 0:\n                        break\n    \n                    # if inside contract but outside functions\n                    if open_brackets == 1:\n                        # if state variable\n                        if [ele for ele in variable_keywords if (ele in words[0])]:\n                            # assert visibility is declared\n                            print(f\"if ele:\")\n>                           assert any(item in words for item in visibility_keywords)\nE                           assert False\nE                            +  where False = any(<generator object test_SWC_108_1.<locals>.<genexpr> at 0x0000021AE543A580>)\n\ntests\\test_swc_108.py:45: AssertionError"}, "teardown": {"duration": 0.0005864000000013192, "outcome": "passed"}}]}