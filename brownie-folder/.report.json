{"created": 1651681749.595907, "duration": 9.3160879611969, "exitcode": 1, "root": "C:\\Users\\mgust\\OneDrive\\Documents\\Quadrabyte\\local-web3-audit\\brownie-folder", "environment": {"Python": "3.9.12", "Platform": "Windows-10-10.0.19044-SP0", "Packages": {"pytest": "6.2.5", "py": "1.11.0", "pluggy": "1.0.0"}, "Plugins": {"eth-brownie": "1.18.1", "hypothesis": "6.27.3", "forked": "1.4.0", "json-report": "1.5.0", "metadata": "2.0.1", "xdist": "1.34.0", "web3": "5.27.0"}}, "summary": {"passed": 3, "failed": 1, "total": 4, "collected": 4}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_environment.py", "type": "Module"}, {"nodeid": "tests/test_swc_101.py", "type": "Module"}, {"nodeid": "tests/test_swc_108.py", "type": "Module"}]}, {"nodeid": "tests/test_environment.py", "outcome": "passed", "result": [{"nodeid": "tests/test_environment.py::test_deploy", "type": "Function", "lineno": 13}]}, {"nodeid": "tests/test_swc_101.py", "outcome": "passed", "result": [{"nodeid": "tests/test_swc_101.py::test_SWC_101_1", "type": "Function", "lineno": 6}, {"nodeid": "tests/test_swc_101.py::test_SWC_101_2", "type": "Function", "lineno": 15}]}, {"nodeid": "tests/test_swc_108.py", "outcome": "passed", "result": [{"nodeid": "tests/test_swc_108.py::test_SWC_108_1", "type": "Function", "lineno": 8}]}], "tests": [{"nodeid": "tests/test_environment.py::test_deploy", "lineno": 13, "outcome": "passed", "keywords": ["test_deploy", "tests/test_environment.py", "brownie-folder"], "setup": {"duration": 0.0007868999999995907, "outcome": "passed"}, "metadata": {"error_message": "Contract failed to deploy"}, "call": {"duration": 0.2331114999999997, "outcome": "passed"}, "teardown": {"duration": 0.0004910000000002412, "outcome": "passed"}}, {"nodeid": "tests/test_swc_101.py::test_SWC_101_1", "lineno": 6, "outcome": "passed", "keywords": ["tests/test_swc_101.py", "brownie-folder", "test_SWC_101_1"], "setup": {"duration": 0.0011248000000012581, "outcome": "passed"}, "metadata": {"error_message": "Initial Value incorrect"}, "call": {"duration": 0.3353844000000006, "outcome": "passed"}, "teardown": {"duration": 0.0013328999999995261, "outcome": "passed"}}, {"nodeid": "tests/test_swc_101.py::test_SWC_101_2", "lineno": 15, "outcome": "passed", "keywords": ["tests/test_swc_101.py", "test_SWC_101_2", "brownie-folder"], "setup": {"duration": 0.001459599999998673, "outcome": "passed"}, "metadata": {"error_message": "Some error desription"}, "call": {"duration": 0.2777139000000002, "outcome": "passed"}, "teardown": {"duration": 0.0005801000000005274, "outcome": "passed"}}, {"nodeid": "tests/test_swc_108.py::test_SWC_108_1", "lineno": 8, "outcome": "failed", "keywords": ["brownie-folder", "test_SWC_108_1", "tests/test_swc_108.py"], "setup": {"duration": 0.0009898000000010398, "outcome": "passed"}, "metadata": {"error_message": "Missing state variable visibility"}, "call": {"duration": 0.0015111999999994907, "outcome": "failed", "crash": {"path": "C:\\Users\\mgust\\OneDrive\\Documents\\Quadrabyte\\local-web3-audit\\brownie-folder\\tests\\test_swc_108.py", "lineno": 33, "message": "assert False"}, "traceback": [{"path": "tests\\test_swc_108.py", "lineno": 33, "message": "AssertionError"}], "stdout": "['pragma', 'solidity', '>=0.6.0', '<0.9.0;']\n", "longrepr": "json_metadata = {'error_message': 'Missing state variable visibility'}\n\n    def test_SWC_108_1(json_metadata):\n        json_metadata[\"error_message\"] = \"Missing state variable visibility\"\n        visibility_keywords = [\"public\", \"internal\", \"private\"]\n        variable_keywords = [\n            \"bool\",\n            \"address\",\n            \"byte\",\n            \"bytes1\",\n            \"bytes2\",\n            \"bytes3\",\n            \"int\",\n            \"uint\",\n        ]\n    \n        CONTRACT_NAME = os.listdir(\"./contracts\")[0]\n        in_contract = False\n        open_brackets = 0\n    \n        with open(f\"contracts/{CONTRACT_NAME}\", \"r\") as f:\n            lines = remove_whitespace(f)\n    \n            for line in lines:\n                words = line.split()\n                print(words)\n>               assert False\nE               assert False\n\ntests\\test_swc_108.py:33: AssertionError"}, "teardown": {"duration": 0.0006137999999999977, "outcome": "passed"}}]}